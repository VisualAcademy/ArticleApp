@page "/Articles"
@page "/Articles/Index"

@using ArticleApp.Models 

@inject IArticleRepository ArticleRepository 

@using Dul.Web
@using Dul.Domain.Common

@using ArticleApp.Pages.Articles.Components

<h3>Index</h3>

<div>
    <a href="/Articles/Create" class="btn btn-primary">Create</a>
</div>

@if (articles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Created</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
            <tr>
                <td>@article.Id</td>
                <td>@article.Title</td>
                <td>@article.Created.ToShortTimeString()</td>
                <td>
                    <a href="/Articles/Details/@article.Id" class="btn btn-light">Details</a>
                    <a href="/Articles/Edit/@article.Id" class="btn btn-light">Edit</a>
                    <a href="/Articles/Delete/@article.Id" class="btn btn-light">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

<ArticlePager Model="pager" PageIndexChanged="PageIndexChanged"></ArticlePager>

@code {
    // 페이저 기본값 설정
    private PagerBase pager = new PagerBase()
    {
        PageNumber = 1,
        PageIndex = 0,
        PageSize = 3,
        PagerButtonCount = 5
    };

    private List<Article> articles;

    protected override async Task OnInitializedAsync()
    {
        //[1] 전체 데이터 모두 출력
        //articles = await ArticleRepository.GetArticlesAsync();

        //[2] 페이징 처리된 데이터만 출력
        PagingResult<Article> pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records.ToList(); // 페이징 처리된 레코드
    }

    // Pager 버튼 클릭 콜백 메서드
    private async void PageIndexChanged(int pageIndex)
    {
        pager.PageIndex = pageIndex;
        pager.PageNumber = pageIndex + 1; 

        var pagingData = await ArticleRepository.GetAllAsync(pager.PageIndex, pager.PageSize);
        pager.RecordCount = pagingData.TotalRecords; // 총 레코드 수
        articles = pagingData.Records.ToList(); // 페이징 처리된 레코드

        StateHasChanged(); // 현재 컴포넌트 재로드(Pager Refresh) 
    }
}
